bins <- getBins(df,y,i)
vars <- cbind(i,vars)
append(i,vars,after = length(vars))
append(bins$varSummary['iv'],iv,after = length(iv))
print(paste(i,iv))
}
print(iv)
print(vars)
}
iv_table(metadata,"ovr30",c("customer_id","ovr30","sample_flag","X"))
# 查看特征的IV值
iv_table <- function(df,y,exclude){
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值
vars <- list()
iv <- list()
for (i in cols) {
library(logiBin)
bins <- getBins(df,y,i)
vars <- cbind(i,vars)
append(i,vars,after = length(vars))
append(bins$varSummary['iv'],iv,after = length(iv))
print(i)
print(iv)
}
print(iv)
print(vars)
}
iv_table(metadata,"ovr30",c("customer_id","ovr30","sample_flag","X"))
# 查看特征的IV值
iv_table <- function(df,y,exclude){
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值
vars <- list()
iv <- list()
for (i in cols) {
library(logiBin)
bins <- getBins(df,y,i)
vars <- cbind(i,vars)
append(i,vars,after = length(vars))
append(bins$varSummary['iv'],iv,after = length(iv))
print(i)
print(iv)
}
print(iv)
print(bins$varSummary['iv'])
}
iv_table(metadata,"ovr30",c("customer_id","ovr30","sample_flag","X"))
mode(bins$varSummary['iv'])
bins$varSummary['iv']
bins
bins$varSummary['iv',1]
bins$varSummary['iv',0]
bins$varSummary['iv'][0]
bins$varSummary['iv'][1]
a <- bins$varSummary['iv']
View(a)
a <- list(a)
a$iv
a
a <- bins$varSummary['iv']
a[1,1]
iv_table <- function(df,y,exclude){
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值
vars <- list()
iv <- list()
for (i in cols) {
library(logiBin)
bins <- getBins(df,y,i)
iv_ <- bins$varSummary['iv']
append(i,vars,after = length(vars))
append(iv_[1,1],iv,after = length(iv))
print(i)
print(iv)
}
print(iv)
print(iv_[1,1])
}
iv_table(metadata,"ovr30",c("customer_id","ovr30","sample_flag","X"))
# 查看特征的IV值
iv_table <- function(df,y,exclude){
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值
vars <- list()
iv <- list()
for (i in cols) {
library(logiBin)
bins <- getBins(df,y,i)
iv_ <- bins$varSummary['iv']
append(i,vars,after = length(vars))
append(iv_[1,1],iv,after = length(iv))
print(i)
print(iv_[1,1])
}
print(iv)
print(iv_[1,1])
}
iv_table <- function(df,y,exclude){
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值
vars <- list()
iv <- list()
for (i in cols) {
bins <- getBins(df,y,i)
iv_ <- bins$varSummary['iv']
append(i,vars,after = length(vars))
append(iv_[1,1],iv,after = length(iv))
print(i)
print(iv_[1,1])
}
print(vars)
print(iv)
}
iv_table(metadata,"ovr30",c("customer_id","ovr30","sample_flag","X"))
length(vars)
length(vars)+1
library(logiBin)
# 查看特征的IV值
iv_table <- function(df, y, exclude) {
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值
vars <- list()
iv <- list()
for (i in cols) {
bins <- getBins(df, y, i)
iv_ <- bins$varSummary['iv']
append(i, vars, after = length(vars) + 1)
append(iv_[1, 1], iv, after = length(iv) + 1)
print(i)
print(iv_[1, 1])
}
print(vars)
print(iv)
}
iv_table(metadata,
"ovr30",
c("customer_id", "ovr30", "sample_flag", "X"))
vars <- list()
vars <- NULL
append("s", vars, after = length(vars) + 1)
vars
vars <- append("s", vars, after = length(vars) + 1)
vars
vars <- append("a", vars, after = length(vars) + 1)
vars
library(logiBin)
# 查看特征的IV值
iv_table <- function(df, y, exclude) {
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值
vars <- NULL
iv <- NULL
for (i in cols) {
bins <- getBins(df, y, i)
iv_ <- bins$varSummary['iv']
vars <- append(i, vars, after = length(vars) + 1)
iv <- append(iv_[1, 1], iv, after = length(iv) + 1)
print(i)
print(iv_[1, 1])
}
print(vars)
print(iv)
}
iv_table(metadata,
"ovr30",
c("customer_id", "ovr30", "sample_flag", "X"))
length(vars)
df <- NULL
df['iv'] <- c(1,2,3)
df
mode(df)
str(df)
df <- as.data.frame(NULL)
df['iv'] <- c(1,2,3)
df
df[1,1] <- 1
df
df[1,2] <- 1
df
iv_table <- function(df, y, exclude,save_iv=NULL,save_woe=NULL) {
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值
vars <- NULL
iv <- NULL
result <- as.data.frame(NULL)
for (i in cols) {
bins <- getBins(df, y, i)
iv_ <- bins$varSummary['iv']
vars <- append(i, vars, after = length(vars) + 1)
result[length(vars),1] <- i
result[length(vars),2] <- iv_[1, 1]
# vars <- append(i, vars, after = length(vars) + 1)
# iv <- append(iv_[1, 1], iv, after = length(iv) + 1)
# print(i)
# print(iv_[1, 1])
}
print(result)
}
iv_table(metadata,
"ovr30",
c("customer_id", "ovr30", "sample_flag", "X"))
# 查看特征的IV值
iv_table <- function(df, y, exclude,save_iv=NULL,save_woe=NULL) {
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值
vars <- NULL
iv <- NULL
result <- as.data.frame(NULL)
for (i in cols) {
bins <- getBins(df, y, i)
iv_ <- bins$varSummary['iv']
vars <- append(i, vars, after = length(vars) + 1)
result[length(vars),1] <- i
result[length(vars),2] <- iv_[1, 1]
print(result)
}
# if (length(save_iv) > 0) {
#
# }
}
iv_table(metadata,
"ovr30",
c("customer_id", "ovr30", "sample_flag", "X"))
cols
rm(list = ls())
library(scorecard)
# step.1  获取数据
if (file.exists(paste(getwd(), "/scorecard/v1/data/android_v4.RData", sep = ""))) {
load(file = "Scorecard/v1/data/android_v4.RData")
metadata <- data
} else {
data <- read.csv(file = "Scorecard/v1/data/android_v4.csv",
header = T,
encoding = "utf-8")
save(data, file = "Scorecard/v1/data/android_v4.RData")
}
library(logiBin)
# 查看特征的IV值
iv_table <- function(df, y, exclude,save_iv=NULL,save_woe=NULL) {
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值
vars <- NULL
iv <- NULL
result <- as.data.frame(NULL)
try()
for (i in cols) {
bins <- getBins(df, y, i)
iv_ <- bins$varSummary['iv']
vars <- append(i, vars, after = length(vars) + 1)
result[length(vars),1] <- i
result[length(vars),2] <- iv_[1, 1]
print(result)
}
# if (length(save_iv) > 0) {
#
# }
}
iv_table(metadata,
"ovr30",
c("customer_id", "ovr30", "sample_flag", "X"))
iv_table(metadata,
"ovr30",
c("customer_id", "ovr30", "sample_flag", "X"))
library(logiBin)
# 查看特征的IV值
iv_table <- function(df, y, exclude,save_iv=NULL,save_woe=NULL) {
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值
vars <- NULL
iv <- NULL
result <- as.data.frame(NULL)
for (i in cols) {
bins <- getBins(df, y, i)
iv_ <- bins$varSummary['iv']
vars <- append(i, vars, after = length(vars) + 1)
print(length(vars))
result[length(vars),1] <- i
result[length(vars),2] <- iv_[1, 1]
print(result)
}
# if (length(save_iv) > 0) {
#
# }
}
iv_table(metadata,
"ovr30",
c("customer_id", "ovr30", "sample_flag", "X"))
colS
library(logiBin)
# 查看特征的IV值
iv_table <- function(df, y, exclude,save_iv=NULL,save_woe=NULL) {
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
print(cols)
# 2.循环计算每个特征IV值
vars <- NULL
iv <- NULL
result <- as.data.frame(NULL)
for (i in cols) {
bins <- getBins(df, y, i)
iv_ <- bins$varSummary['iv']
vars <- append(i, vars, after = length(vars) + 1)
print(length(vars))
result[length(vars),1] <- i
result[length(vars),2] <- iv_[1, 1]
print(result)
}
# if (length(save_iv) > 0) {
#
# }
}
iv_table(metadata,
"ovr30",
c("customer_id", "ovr30", "sample_flag", "X"))
getBins(metadata, "ovr30", "vari0371")
bins <- getBins(metadata, "ovr30", "vari0371")
bins$varSummary['iv']
is.na(bins$varSummary['iv'])
length(bins$varSummary['iv'])
library(logiBin)
# 查看特征的IV值
iv_table <- function(df, y, exclude,save_iv=NULL,save_woe=NULL) {
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
print(cols)
# 2.循环计算每个特征IV值
vars <- NULL
iv <- NULL
result <- as.data.frame(NULL)
for (i in cols) {
bins <- getBins(df, y, i)
iv_ <- bins$varSummary['iv']
vars <- append(i, vars, after = length(vars) + 1)
if (length(iv_) > 0) {
result[length(vars),1] <- i
result[length(vars),2] <- iv_[1, 1]
} else {
result[length(vars),1] <- i
result[length(vars),2] <- NULL
}
print(result)
}
# if (length(save_iv) > 0) {
#
# }
}
iv_table(metadata,
"ovr30",
c("customer_id", "ovr30", "sample_flag", "X"))
library(logiBin)
# 查看特征的IV值
iv_table <- function(df, y, exclude,save_iv=NULL,save_woe=NULL) {
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值
vars <- NULL
iv <- NULL
err <- NULL
result <- as.data.frame(NULL)
for (i in cols) {
bins <- getBins(df, y, i)
iv_ <- bins$varSummary['iv']
if (length(iv_) > 0) {
vars <- append(i, vars, after = length(vars) + 1)
result[length(vars),1] <- i
result[length(vars),2] <- iv_[1, 1]
} else {
print(paste(i,"发生错误!",sep = " "))
}
print(result)
err <- append(i, err, after = length(err) + 1)
}
# if (length(save_iv) > 0) {
#
# }
}
iv_table(metadata,
"ovr30",
c("customer_id", "ovr30", "sample_flag", "X"))
b1 <- getBins(loanData, "bad_flag", c('age', 'score', 'balance'), minCr=0.8)
createBins(b1, loanData, c('age', 'balance'))
createBins(b1, loanData, c('age'))
b1
mode(b1)
b1$bin
str(b1)
as.data.frame(b1$bin)
library(logiBin)
# 查看特征的IV值
iv_table <- function(df,
y,
exclude,
save_iv = NULL,
save_woe = NULL) {
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值,判断是否保存WOE明细
vars <- NULL
iv <- NULL
err <- NULL
result <- as.data.frame(NULL)
for (i in cols) {
bins <- getBins(df, y, i)
iv_ <- bins$varSummary['iv']
# iv table
if (length(iv_) > 0) {
vars <- append(i, vars, after = length(vars) + 1)
result[length(vars), 1] <- i
result[length(vars), 2] <- iv_[1, 1]
# woe
if (length(save_woe) > 0) {
woe <- as.data.frame(bins$bin)
write.csv(woe, file = save_woe, append = T)
}
} else {
print(paste(i, "发生错误!", sep = " "))
err <- append(i, err, after = length(err) + 1)
}
}
# 3.判断是否保存IV结果表到本地
if (length(save_iv) > 0) {
write.csv(result, save_iv)
}
print(err)
return(result)
}
iv_table(
metadata,
"ovr30",
c("customer_id", "ovr30", "sample_flag", "X"),
save_iv = "iv.csv",
save_woe = "woe.csv"
)
library(logiBin)
# 查看特征的IV值
iv_table <- function(df,
y,
exclude,
save_iv = NULL,
save_woe = NULL) {
# 1.排除无需计算IV的特征
cols <- colnames(df)
cols <- cols[!names(df) %in% exclude]
# 2.循环计算每个特征IV值,判断是否保存WOE明细
vars <- NULL
iv <- NULL
err <- NULL
result <- as.data.frame(NULL)
for (i in cols) {
bins <- getBins(df, y, i)
iv_ <- bins$varSummary['iv']
# iv table
if (length(iv_) > 0) {
vars <- append(i, vars, after = length(vars) + 1)
result[length(vars), 1] <- i
result[length(vars), 2] <- iv_[1, 1]
# woe
if (length(save_woe) > 0) {
woe <- as.data.frame(bins$bin)
write.csv(woe, file = save_woe, append = T)
}
} else {
print(paste(i, "发生错误!", sep = " "))
err <- append(i, err, after = length(err) + 1)
}
}
# 3.判断是否保存IV结果表到本地
if (length(save_iv) > 0) {
write.csv(result, save_iv)
}
print(err)
return(result)
}
iv_table(
metadata,
"ovr30",
c("customer_id", "ovr30", "sample_flag", "X"),
save_iv = "iv.csv",
save_woe = "woe.csv"
)
View(metadata)
metadata$td_multi_pf_app_7d
str(metadata$td_multi_pf_app_7d0
）
str(metadata$td_multi_pf_app_7d)
